
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document (e.g., on signup)
      allow create: if request.auth != null && request.auth.uid == userId;

      // Authenticated users can read their own document.
      // Admins (with custom claim admin == true) can read any user document.
      allow read: if request.auth != null && 
                    (request.auth.uid == userId || request.auth.token.admin == true);

      // Authenticated users can update their own document.
      // Admins can update any user document (be cautious with client-side admin updates).
      allow update: if request.auth != null &&
                      (request.auth.uid == userId || request.auth.token.admin == true);
      
      // Only admins should be able to delete user documents (generally not recommended)
      // allow delete: if request.auth != null && request.auth.token.admin == true;
      allow delete: if false; // Typically, users should not be able to delete their accounts directly via client.

      // Example: if you add a 'role' field that users shouldn't change themselves:
      // allow update: if request.auth.uid == userId && !(request.resource.data.role != resource.data.role);
      // This means they can update other fields, but not 'role'. Admins could update 'role'.
    }

    // Rules for an 'adminData' collection, accessible only by admins
    match /adminData/{docId} {
      allow read, write, create, delete: if request.auth != null && request.auth.token.admin == true;
    }

    // Add rules for other collections like 'scans' or 'rewards' as needed.
    // Example for 'scans' collection:
    // match /scans/{scanId} {
    //   allow create: if request.auth != null; // Any authenticated user can create a scan
    //   allow read: if request.auth != null && request.auth.token.admin == true; // Only admins can read all scans
    //   // allow read: if request.auth != null && request.resource.data.userId == request.auth.uid; // Or users can read their own scans
    // }
  }
}

    